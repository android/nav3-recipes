From 8d90c1e2a7b273c22644cc4132dfd56acc3a63d6 Mon Sep 17 00:00:00 2001
From: Hiroki Nakagawa <nhiroki@chromium.org>
Date: Sun, 07 Sep 2025 21:43:29 -0700
Subject: [PATCH] Prerender: Remove force_enable_prerender2_in_new_tab param

This CL removes `force_enable_prerender2_in_new_tab` param from
`ScopedPrerenderFeatureList`. The param was used for enabling the
kPrerender2InNewTab feature flag in tests, but the feature has been
enabled by default since M135. The param is no longe needed. This CL
removes it.

Bug: 40234240
Change-Id: I66788bbac3fee96dd843b2019348f49280bd4116
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6918382
Reviewed-by: Huanpo Lin <robertlin@chromium.org>
Auto-Submit: Hiroki Nakagawa <nhiroki@chromium.org>
Commit-Queue: Huanpo Lin <robertlin@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1512229}
---

diff --git a/content/browser/preloading/prerender/prerender_browsertest.cc b/content/browser/preloading/prerender/prerender_browsertest.cc
index ec0e2cc..e17acdab 100644
--- a/content/browser/preloading/prerender/prerender_browsertest.cc
+++ b/content/browser/preloading/prerender/prerender_browsertest.cc
@@ -351,8 +351,7 @@
     prerender_helper_ = std::make_unique<test::PrerenderTestHelper>(
         base::BindRepeating(&PrerenderBrowserTest::web_contents,
                             base::Unretained(this)),
-        /*force_disable_prerender2_fallback*/ true,
-        /*force_enable_prerender2innewtab*/ false);
+        /*force_disable_prerender2_fallback=*/true);
 
     // Input suppression during paintholding interferes with the input event
     // dispatches to top frames.  Disabling kDropInputEventsWhilePaintHolding
diff --git a/content/browser/preloading/prerenderer_impl_browsertest.cc b/content/browser/preloading/prerenderer_impl_browsertest.cc
index 34309de..2956d26 100644
--- a/content/browser/preloading/prerenderer_impl_browsertest.cc
+++ b/content/browser/preloading/prerenderer_impl_browsertest.cc
@@ -65,8 +65,7 @@
               return &that->web_contents();
             },
             base::Unretained(this)),
-        /*force_disable_prerender2fallback=*/false,
-        /*force_enable_prerender2innewtab==*/false);
+        /*force_disable_prerender2_fallback=*/false);
 
     ContentBrowserTest::SetUp();
   }
diff --git a/content/public/test/prerender_test_util.cc b/content/public/test/prerender_test_util.cc
index 2e0c14a..49d3cd1 100644
--- a/content/public/test/prerender_test_util.cc
+++ b/content/public/test/prerender_test_util.cc
@@ -465,21 +465,13 @@
 }
 
 ScopedPrerenderFeatureList::ScopedPrerenderFeatureList()
-    : ScopedPrerenderFeatureList(/*force_disable_prerender2_fallback=*/true,
-                                 /*force_enable_prerender2_in_new_tab=*/true) {}
+    : ScopedPrerenderFeatureList(/*force_disable_prerender2_fallback=*/true) {}
 
 ScopedPrerenderFeatureList::ScopedPrerenderFeatureList(
-    bool force_disable_prerender2_fallback,
-    bool force_enable_prerender2_in_new_tab) {
+    bool force_disable_prerender2_fallback) {
   std::vector<base::test::FeatureRef> enabled_features;
   std::vector<base::test::FeatureRef> disabled_features;
 
-  // Explicitly enables blink::features::kPrerender2InNewTab to override
-  // SpeculationRulesTargetHint.
-  if (force_enable_prerender2_in_new_tab) {
-    enabled_features.push_back(blink::features::kPrerender2InNewTab);
-  }
-
   // Disable the memory requirement of Prerender2
   // so the test can run on any bot.
   disabled_features.push_back(blink::features::kPrerender2MemoryControls);
@@ -497,17 +489,13 @@
 
 PrerenderTestHelper::PrerenderTestHelper(const WebContents::Getter& fn)
     : feature_list_(ScopedPrerenderFeatureList(
-          /*force_disable_prerender2_fallback=*/true,
-          /*force_enable_prerender2_in_new_tab=*/true)),
+          /*force_disable_prerender2_fallback=*/true)),
       get_web_contents_fn_(fn) {}
 
-PrerenderTestHelper::PrerenderTestHelper(
-    const WebContents::Getter& fn,
-    bool force_disable_prerender2_fallback,
-    bool force_enable_prerender2_in_new_tab)
+PrerenderTestHelper::PrerenderTestHelper(const WebContents::Getter& fn,
+                                         bool force_disable_prerender2_fallback)
     : feature_list_(
-          ScopedPrerenderFeatureList(force_disable_prerender2_fallback,
-                                     force_enable_prerender2_in_new_tab)),
+          ScopedPrerenderFeatureList(force_disable_prerender2_fallback)),
       get_web_contents_fn_(fn) {}
 
 PrerenderTestHelper::~PrerenderTestHelper() = default;
diff --git a/content/public/test/prerender_test_util.h b/content/public/test/prerender_test_util.h
index 5c5ec2c..38253a6 100644
--- a/content/public/test/prerender_test_util.h
+++ b/content/public/test/prerender_test_util.h
@@ -115,8 +115,7 @@
 class ScopedPrerenderFeatureList {
  public:
   ScopedPrerenderFeatureList();
-  explicit ScopedPrerenderFeatureList(bool force_disable_prerender2_fallback,
-                                      bool force_enable_prerender2_in_new_tab);
+  explicit ScopedPrerenderFeatureList(bool force_disable_prerender2_fallback);
   ScopedPrerenderFeatureList(const ScopedPrerenderFeatureList&) = delete;
   ScopedPrerenderFeatureList& operator=(const ScopedPrerenderFeatureList&) =
       delete;
@@ -130,8 +129,7 @@
  public:
   explicit PrerenderTestHelper(const WebContents::Getter& fn);
   explicit PrerenderTestHelper(const WebContents::Getter& fn,
-                               bool force_disable_prerender2_fallback,
-                               bool force_enable_prerender2_in_new_tab);
+                               bool force_disable_prerender2_fallback);
   ~PrerenderTestHelper();
   PrerenderTestHelper(const PrerenderTestHelper&) = delete;
   PrerenderTestHelper& operator=(const PrerenderTestHelper&) = delete;
